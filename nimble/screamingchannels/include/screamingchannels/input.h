#ifndef INPUT_H
#define INPUT_H

#include <stdint.h>
#include "nimble/ble.h"
#include "host/ble_store.h"
#include "controller/ble_ll_conn.h"

#ifdef __cplusplus
extern "C" {
#endif

// AES inputs generation mode constants.
#define SC_INPUT_MODE_GEN 1 // AES inputs are generated by Nimble during pairing.
#define SC_INPUT_MODE_SUB 2 // AES inputs are submitted by a computer from the serial port.

#define INPUT_SIZE 16 // 128-bits for keys and plaintexts.

// Used by other modules to set/get what is the AES input generation
// method. Should be set to SC_INPUT_MODE_GEN or SC_INPUT_MODE_SUB.
extern int SC_INPUT_MODE;
// Used by other modules to set/get the current state of AES inputs
// submission. Should be set to a boolean. If set to 1, this means that the
// current key (SC_INPUT_KS) and current plaintext (SC_INPUT_PT) have been
// registered inside the Nimble security database.
extern int SC_INPUT_SUB_OK;

/**
 * Inputs values.
 *
 * Should be set to a correct value if SC_INPUT_SUB_OK is set to 1.
 * Are arrays of size INPUT_SIZE.
*/
extern uint8_t SC_INPUT_KS[INPUT_SIZE]; // Key used for the AES (LTK).
extern uint8_t SC_INPUT_PT[INPUT_SIZE]; // Plaintext used for the AES (SKD).

/** Security material with its address that will be added into security database. */
extern struct ble_store_value_sec SC_INPUT_VALUE_SEC;
extern ble_addr_t SC_INPUT_PEER_ADDR;

// Return a string indicating what is the AES input generation method.
char * sc_input_get_input_mode_str();

/** Submit the custom Screaming Channels input to the Nimble subsystem.
 *
 * This implies to register a structure inside the Nimble security database
 * with the LTK/RAND/EDIV set such that it allows to connect without
 * pairing. Moreover, it exposes the key (i.e., the LTK) to the AES submodule
 * since the latter searched it from the security database.
 *
 * The function return the code returned by the 'ble_store_write_our_sec()'
 * function, i.e. 0 if there is not errors.
 */
int sc_input_sub();

/** Set the custom Screaming Channels input to the current connection.
 *
 * Set the plaintext (i.e., the SKDs) that will be used by AES of the
 * current connection to the Screaming CHannels given input.
 *
 * This function is intended to be called automatically by the Nimble
 * controller if SC_INPUT_MODE is set to SC_INPUT_MODE_SUB and
 * SC_INPUT_SUB_OK is set to 1. */
void sc_input_set_to_conn_enc_data(struct ble_ll_conn_enc_data *enc_data);

/** Generate and print a key.
 *
 * The key will be generated using the same functions as the LTK is generated.
 * This function is used to transfer a key over the serial port.
 */
void sc_input_ks_gen_print();

/** Generate and print a plaintext.
 *
 * The plaintext will be generated using the same functions as the SKD is generated.
 * This function is used to transfer a plaintext over the serial port.
 */
void sc_input_pt_gen_print();

#ifdef __cplusplus
}
#endif

#endif
